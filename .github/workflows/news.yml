name: Build and Deploy QuickNews

on:
  schedule:
    - cron: "0 7 * * *"   # US morning, 2AM US/Eastern -> 07:00 UTC
    - cron: "0 15 * * *"  # JP morning, 9AM Asia/Tokyo -> 15:00 UTC
    - cron: "0 0 * * *"   # FR morning, 1AM Europe/Paris (CET)
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [us, jp, fr]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure gh-pages history is available

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Check schedule matches region
        id: check
        run: |
          MATCH=false

          US_HOUR=$(TZ=US/Eastern date +%H)
          JP_HOUR=$(TZ=Asia/Tokyo date +%H)
          FR_HOUR=$(TZ=Europe/Paris date +%H)

          if [ "${{ matrix.region }}" = "us" ] && [ "$US_HOUR" -eq 02 ]; then
            MATCH=true
          elif [ "${{ matrix.region }}" = "jp" ] && [ "$JP_HOUR" -eq 09 ]; then
            MATCH=true
          elif [ "${{ matrix.region }}" = "fr" ] && [ "$FR_HOUR" -eq 01 ]; then
            MATCH=true
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "${{ github.event_name }}" = "push" ]; then
            MATCH=true
          fi

          echo "match=$MATCH" >> $GITHUB_OUTPUT

      - name: Run main.py for ${{ matrix.region }}
        if: steps.check.outputs.match == 'true'
        run: python main.py ${{ matrix.region }}

      - name: Add .nojekyll
        if: steps.check.outputs.match == 'true'
        run: touch ./newspaper/.nojekyll

      - name: Deploy to gh-pages
        if: steps.check.outputs.match == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin
          if git show-ref --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
            git reset --hard
          fi

          # create subfolder for each region
          mkdir -p ${{ matrix.region }}
          cp newspaper/QuickNews_${{ matrix.region }}.html ./${{ matrix.region }}/
          touch .nojekyll

          git add ${{ matrix.region }}/
          git commit -m "Add new QuickNews ${{ matrix.region }} edition" || echo "No changes"
          git push origin gh-pages
